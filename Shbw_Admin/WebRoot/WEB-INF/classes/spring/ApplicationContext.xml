<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
	">
	
	<import resource="classpath:META-INF/cxf/cxf.xml"/>
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml"/>
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
	<!--CXF的配置开始 -->
	<jaxws:endpoint id="testService" address="/dataService" implementorClass="com.shbw.webservice.DoDataExceptServiceImpl">
		<jaxws:implementor ref="doDataExceptServiceImpl"/>
	</jaxws:endpoint>
	<!--CXF的配置结束 -->
	
	<!-- 启用注解 -->
	<context:annotation-config />
	
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.shbw">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
    	<property name="dataSource" ref="dataSource"></property>
 	</bean>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		<property name="locations">  
			<list>  
                 <value>/WEB-INF/classes/dbconfig.properties</value>  
            </list>  
        </property>  
	</bean> 
	<bean class="com.shbw.util.XBasicDataSource" id="dataSource" destroy-method="close">
       <property value="${driverClassName}" name="driverClassName"/>
       <property value="${url}" name="url"/>
       <property value="${username}" name="username"/>
       <property value="${password}" name="password"/>
       <property value="${maxActive}" name="maxActive"/>
       <property value="${maxWait}" name="maxWait"/>
       <property value="${minIdle}" name="maxIdle"/>
       <property value="${removeAbandoned}" name="removeAbandoned"/>
       <property value="${removeAbandonedTimeout}" name="removeAbandonedTimeout"/>
       <property value="${logAbandoned}" name="logAbandoned"/>
   </bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 事物处理 -->
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.shbw.service..*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>
	
	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="classpath:mybatis/*/*.xml"></property>
    </bean>
    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- ================ Shiro start ================ -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="ShiroRealm" />
		</bean>
		
		<!-- 項目自定义的Realm 可完成连接数据库的用户名和密码的认证 -->
	    <bean id="ShiroRealm" class="com.shbw.interceptor.shiro.ShiroRealm" ></bean>
		
		<!-- Shiro Filter 注意：这里的id值必须与WEB中配置的拦截器的id值是一致的-->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			<property name="loginUrl" value="/" />
			<property name="successUrl" value="/main/index" />
			<property name="unauthorizedUrl" value="/login_toLogin" />
			<property name="filterChainDefinitions">
				<value>
				/static/login/** 	= anon
				/static/js/myjs/** 	= authc
				/static/js/** 		= anon
	           	/code.do 			= anon
	           	/login_login	 	= anon
	           	/app**/** 			= anon
				</value>
			</property>
		</bean>
	<!-- ================ Shiro end ================ -->
	<!-- activiti配置文件 -->
	<import resource="classpath:activiti.cfg.xml"/>
	<!-- spring定时任务 -->
<!-- 	<bean id="dataStatistics" class="com.shbw.taskjob.DataStatistics" />
	<bean id="myDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
       <property name="targetObject" ref="dataStatistics" />  
       <property name="targetMethod" value="unOrderStatics" />  
       <property name="concurrent" value="false" />  
    </bean> 
	<bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="myDetail" />  
        <property name="cronExpression">  
            <value>3 * * * * ?</value>  
        </property>  
   </bean>
   Quartz的调度工厂，调度工厂只能有一个，多个调度任务在list中添加  
   <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
     <property name="triggers">  
       <list>  
         <ref bean="myTrigger" />  
       </list>  
     </property>  
   </bean> -->
	
	
</beans>
